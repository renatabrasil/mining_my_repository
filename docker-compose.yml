version: "3.7"

networks:
  app-net:
    name: app-net

volumes:
  grafana-data: { }
  prometheus_data: { }

x-logging: &loki-logging
  driver: loki
  options:
    loki-url: "http://localhost:3100/api/prom/push"

services:
  app:
    build: .
    image: mining_my_repository/app
    restart: unless-stopped
    env_file:
      - ./config/django/django.env
      - ./config/gunicorn/gunicorn.env
    command: gunicorn mining_my_repository.wsgi:application -c /usr/web/config/gunicorn/gunicorn-app.conf.py
    ports:
      - "8000:8000"
    networks:
      - app-net
    logging: *loki-logging
  grafana:
    image: grafana/grafana:6.7.3
    restart: unless-stopped
    env_file:
      - ./config/grafana/grafana.env
    ports:
      - "3000:3000"
    networks:
      - app-net
    volumes:
      - grafana-data:/var/lib/grafana
    logging: *loki-logging
  statsd-exporter:
    image: prom/statsd-exporter:v0.15.0
    restart: unless-stopped
    command:
      - "--statsd.mapping-config=/statsd/statsd.conf"
    networks:
      - app-net
    volumes:
      - ./config/statsd-exporter/statsd.conf:/statsd/statsd.conf
    logging: *loki-logging
  prometheus:
    image: prom/prometheus:v2.17.2
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=24h"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"
    networks:
      - app-net
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    logging: *loki-logging