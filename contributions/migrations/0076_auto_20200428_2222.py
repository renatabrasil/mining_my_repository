# Generated by Django 3.0 on 2020-04-29 01:22
import re

from django.db import migrations


class Migration(migrations.Migration):
    def fix_experience(apps, schema_editor):
        # We can't import the Person model directly as it may be a newer
        # version than this migration expects. We use the historical version.
        commit = apps.get_model('contributions', 'Commit')
        modification = apps.get_model('contributions', 'Modification')

        for commit in commit.objects.filter(tag_id=23).order_by('id'):
            m = re.search(
                r'\Submitted\s*([bB][yY])[:]*\s*[\s\S][^\r\n]*[a-zA-Z0-9_.+-]+((\[|\(|\<)|(\s*(a|A)(t|T)\s*|@)[a-zA-Z0-9-]+(\s*(d|D)(O|o)(t|T)\s*|\.)[a-zA-Z0-9-.]+|(\)|\>|\]))',
                commit.msg, re.IGNORECASE)
            found = ''
            if m:
                found = m.group(0)
                if found:
                    commit.has_submitted_by = True

            previous_commit = commit.objects.filter(author=commit.author, tag_id__lte=commit.tag.id,
                                                    tag__project=commit.tag.project, id__lt=commit.id).last()

            first_commit = commit.objects.filter(author=commit.author, has_submitted_by=False,
                                                 tag_id__lte=commit.tag.id,
                                                 id__lt=commit.id, tag__project=commit.tag.project).first()

            commit.total_commits = previous_commit.total_commits if previous_commit is not None else 0
            commit.cloc_activity = 0

            if previous_commit is not None:
                commit.total_commits += 1
                commit.cloc_activity = previous_commit.cloc_activity

            if first_commit is not None:
                commit.author_seniority = commit.author_date - first_commit.author_date
                commit.author_seniority = abs(commit.author_seniority.days)

            commit.author_experience = 0.0

            file_by_authors = modification.objects.none()
            if commit.total_commits > 0:
                file_by_authors = modification.objects.filter(commit__author=commit.author,
                                                              commit__tag_id__lte=commit.tag.id,
                                                              commit__tag__project=commit.tag.project,
                                                              commit_id__lte=previous_commit.id)

            files = file_by_authors.values("path").distinct().count()

            commit.author_experience = 0.2 * commit.total_commits + 0.4 * files + 0.4 * commit.cloc_activity

            commit.save()

            lista = commit.parents_str.split(",")
            for parent_hash in lista:
                parent = commit.objects.filter(hash=parent_hash)
                if parent.count() > 0:
                    parent = parent[0]
                    parent.children_commit = commit
                    commit.parent = parent
                    parent.save(update_fields=['children_commit'])

    dependencies = [
        ('contributions', '0075_auto_20200428_2217'),
    ]

    operations = [
        migrations.RunPython(fix_experience),
    ]
